var test = (function() {

    var benches = [];
    var bench;
    var results = {};

    {{#each entries}}
        bench = Benchmark("{{this.title}}", {
            'id': {{@key}},
            'async': true,
            'setup': function() {
                {{{../harness.setUp}}}
            },
            'teardown': function() {
                {{{../harness.tearDown}}}
            },
            'fn': function(deferred) {
                {{{this.code}}}
                //deferred.resolve();
            },
            'onStart': function(e) {
                var bench = e.target;
                App.TestCaseRunner.renderResult(bench.id, 'Starting ...');
            },
            'onComplete': function(e) {
                var bench = e.target;
                // App.TestCaseRunner.renderResult(bench.id, 'Done!');
                results[bench.id] = {
                    id: bench.id,
                    error: bench.error ? Benchmark.join(bench.error) : null,
                    opsPerSec: bench.hz.toFixed(bench.hz < 100 ? 2 : 0),
                    opsPerSecFormatted: Benchmark.formatNumber(bench.hz.toFixed(bench.hz < 100 ? 2 : 0)),
                    pm: bench.stats.rme.toFixed(2),
                    runSamples: bench.stats.sample.length
                };
                App.TestCaseRunner.renderResult(bench.id, results[bench.id].opsPerSecFormatted + ' (&plusmn;' + results[bench.id].pm + ')');
            }
        });
        // Keep the original order, even if the code content or title changes.
        benches.push(bench);
    {{/each}}
    bench = null;

    Benchmark.invoke(benches, {
        'name': 'run',
        'args': true,
        // 'queued': true,
        'onStart': function(e) {
            console.log('Starting benchmarks ...', e);
        },
        'onCycle': function(e) {
            console.log('onCycle here.', e);
        },
        'onComplete': function(e) {
            console.log('onComplete here.', e);
            console.log('Results', results);

            App.TestCasePage.toggleBtn('run-testcase-button', 'active');
            App.TestCaseRunner.renderWinnerResult(Benchmark.filter(benches, 'fastest')[0].id);
            App.TestCaseRunner.renderLoserResult(Benchmark.filter(benches, 'slowest')[0].id);
            App.TestCaseRunner.pushResults(results)
                .then(function(data) {
                    return App.TestCaseRunner.drawChart(data);
                });
        }
    });

})();